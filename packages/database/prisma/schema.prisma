generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PipelineType {
  WEBHOOK
  EMAIL_NOTIFICATION
}

enum PipelineEvent {
  PAGE_SUBMISSION
  FORM_COMPLETED
}

model Form {
  id                 String              @id
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  owner              User                @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId            Int
  name               String              @default("")
  schema             Json                @default("{}")
  submissions        Submission[]
  pipelines          Pipeline[]
}

model Pipeline {
  id        String          @id @default(uuid())
  createdAt DateTime        @default(now()) @map(name: "created_at")
  updatedAt DateTime        @updatedAt @map(name: "updated_at")
  name      String
  type      PipelineType
  form      Form            @relation(fields: [formId], references: [id], onDelete: Cascade)
  formId    String
  enabled   Boolean         @default(false)
  events    PipelineEvent[]
  data      Json            @default("{}")
} 

model Submission {
  id                  String            @id @default(uuid())
  createdAt           DateTime          @default(now()) @map(name: "created_at")
  updatedAt           DateTime          @updatedAt @map(name: "updated_at")
  form                Form              @relation(fields: [formId], references: [id], onDelete: Cascade)
  formId              String
  data                Json
}

model User {
  id            Int       @id @default(autoincrement())
  firstname     String?
  lastname      String?
  email         String    @unique
  emailVerified DateTime? @map(name: "email_verified")
  password      String
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  forms         Form[]

  @@map(name: "users")
}
